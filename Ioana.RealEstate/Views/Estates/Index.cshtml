@using Ioana.RealEstate.Search.Models
@model EstateListModel
@{
    Model.Title = @Resources.RealEstatesLabel;
}

@helper GridHeader(string columnName, string label)
{
    bool isAscending = Model.GridModel.IsOrderedAscendingBy(columnName);
    <a class="grid-header" href="@Url.GridUrl(orderby: columnName, orderByAscending: !isAscending)">
        @label
        @if (Model.GridModel.IsOrderedBy(columnName))
        {
            <i class="glyphicon @(isAscending ? "glyphicon-sort-by-alphabet" : "glyphicon-sort-by-alphabet-alt")"></i>
        }
    </a>
}

@Html.Partial("RealEstateSearchSummary", Model.EstateSearch)

@if (Model.GridModel == null || Model.GridModel.Items == null || Model.GridModel.Items.Length == 0)
{
    <div class="alert alert-danger">
        @Resources.NoRealEstatesFoundMessage
    </div>
}
else
{
    <div class="panel panel-default">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>@GridHeader("id", "#")</th>
                        <th>@GridHeader("offerType", Resources.OfferTypeLabel)</th>
                        <th>@GridHeader("estateType", Resources.EstateTypeLabel)</th>
                        <th>@GridHeader("cityRegion", Resources.CityRegionLabel)</th>
                        <th>@GridHeader("area", Resources.AreaLabel)</th>
                        <th>@GridHeader("price", Resources.PriceLabel)</th>
                        <th>@GridHeader("responsible", Resources.BrokerLabel)</th>
                        <th>@GridHeader("dateCreated", Resources.DateCreatedLabel)</th>
                        <th>@Resources.PictureLabel</th>
                        <th><i class="glyphicon glyphicon-share"></i></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (OfferIndexDocument item in Model.GridModel.Items)
                {
                <tr>
                    <th scope="row">@item.Id</th>
                    <td>@item.OfferType</td>
                    <td>@item.EstateType</td>
                    <td>@item.City - @item.CityRegion</td>
                    <td>@item.Area</td>
                    <td>@Html.Price(item.Price, item.DisplayCurrencyId)</td>
                    <td>@item.Responsible</td>
                    <td>@Html.Date(item.DateCreated)</td>
                    <td><img src="/tmbs/@(item.Id).png" /></td>
                    <td>@Html.ActionLink(Resources.ViewLabel, "Details", "Estates", new { Id = item.Id }, null)</td>
                </tr>
                }
                </tbody>
            </table>
        </div>
        <div class="panel-footer">
            <div class="row">
                <div class="col-sm-6">
                    @if (Model.GridModel.Pages.Length > 3)
                    {
                        <ul class="pagination no-margin">
                            @for (int i = 0; i < Model.GridModel.Pages.Length; i++)
			                {
                                int pageToRender = Model.GridModel.Pages[i];
                                if (i == 0)
                                {
                                    if (pageToRender == Model.GridModel.CurrentPage)
                                    {
                                        <li class="disabled"><span>«</span></li>
                                    }
                                    else
                                    {
                                        <li><a href="@Url.GridUrl(page: pageToRender)">«</a></li>
                                    }
                                }
                                else if (i == (Model.GridModel.Pages.Length - 1))
                                {
                                    if (pageToRender == Model.GridModel.CurrentPage)
                                    {
                                        <li class="disabled"><span>»</span></li>
                                    }
                                    else
                                    {
                                        <li><a href="@Url.GridUrl(page: pageToRender)">»</a></li>
                                    }
                                }
                                else if (pageToRender == Model.GridModel.CurrentPage)
                                {
                                    <li class="active"><span>@pageToRender</span></li>
                                }
                                else if (pageToRender == (Model.GridModel.CurrentPage - (Model.GridModel.PagerRadius + 1)))
                                {
                                    <li><a href="@Url.GridUrl(page: pageToRender)">@(pageToRender == 1 ? pageToRender.ToString() : "...")</a></li>
                                }
                                else if (pageToRender == (Model.GridModel.CurrentPage + (Model.GridModel.PagerRadius + 1)))
                                {
                                    <li><a href="@Url.GridUrl(page: pageToRender)">@(pageToRender == Model.GridModel.PagesCount ? pageToRender.ToString() : "...")</a></li>
                                }
                                else
                                {
                                    <li><a href="@Url.GridUrl(page: pageToRender)">@pageToRender</a></li>
                                }
			                }
                        </ul>
                    }
                </div>

                <div class="col-sm-6 text-right">
                    <ul style="display:inline-block" class="no-padding no-margin">
                        <li style="display:inline-block">
                            <span style="position: relative; float: left; padding: 6px 12px; margin-left: -1px; line-height: 1.428571429; text-decoration: none;">
                                @Resources.PageSizeLabel: <b>@Model.GridModel.PageSize</b>
                            </span>
                        </li>
                        <li style="display:inline-block">
                            <span style="position: relative; float: left; padding: 6px 12px; margin-left: -1px; line-height: 1.428571429; text-decoration: none;">
                                <b>@Model.GridModel.DisplayingFrom</b>
                                -
                                <b>@Model.GridModel.DisplayingTo</b>
                                @Resources.OfPagesLabel
                                <b>@Model.GridModel.VirtualItemsCount</b> @Resources.OffersLabel
                            </span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}
